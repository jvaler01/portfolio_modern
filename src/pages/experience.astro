---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Button from '../components/Button.astro';
import { experienceData } from '../utils/data/experienceData';
import type { experienceDataModel } from '../utils/models/experienceModel';
---

<Layout title="Home Page" >
  <section class="about">
    <h1>Experience</h1>
    <div class="wrapper">
      <div class="timeline_container" id="timeline_container">
        
        {
          experienceData.map((experienceItem: experienceDataModel, index) => {
            if(index % 2 === 0) {
              return (
                <div class="item">
                  <h3 class="hidden_date">{experienceItem.date}</h3>
                  <Card full_height={true} body={''} title={experienceItem.company}>
                    <div slot="custom-body" class="card_custom_content">
                      <h3>{experienceItem.position}</h3>
                      {
                        experienceItem.content.map((contentItem) => {
                          return (
                            <ul>
                              <li><span class="content_project">{contentItem.project}: </span>{contentItem.content}</li>
                            </ul>
                          )
                        })
                      }
                    </div>
                  </Card>
                </div>
                <div class="item item_start item_date">
                  <h3>{experienceItem.date}</h3>
                </div>
              )
            }else{
              return (
                <div class="item item_date">
                  <h3>{experienceItem.date}</h3>
                </div>
                <div class="item item_start">
                  <h3 class="hidden_date">{experienceItem.date}</h3>
                  <Card full_height={false} body={''} title={experienceItem.company}>
                    <div slot="custom-body" class="card_custom_content">
                      <h3>{experienceItem.position}</h3>
                      {
                        experienceItem.content.map((contentItem) => {
                          return (
                            <ul>
                              <li><span class="content_project">{contentItem.project}: </span>{contentItem.content}</li>
                            </ul>
                          )
                        })
                      }
                    </div>
                  </Card>
                </div>
              )
            }
          })
        }
      </div>
      <div class="back_button">
        <Button text='Back' href='/home'></Button>
      </div>
    </div>
  </section>

  <div class="stars">
    <span></span>
    <span></span>
    <span></span>
    <span></span>
    <span></span>
    <span></span>
    <span></span>
    <span></span>
  </div>
</Layout>
<style>
  .about {
    color: var(--primary_text);
    padding: 100px;
    height: 100%;
    width: 100%;
    max-width: 1440px;
    margin: 0 auto;
  }
  .wrapper {
    margin-top: 25px;
    height: 100%;
  }
  .timeline_container {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 50px;
    /* counter-reset: section; */
  }
  .item {
    display: grid;
    justify-content: end;
  }
  .item::before {
    color: #ffffff;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1em;
    height: 1em;
    background-color: var(--background);
    border: 2px solid var(--border);
    border-radius: 50%;
    position: absolute;
    /* counter-increment: section;
    content: counter(section); */
    content: '';
    left: 50%;
    transform: translateX(-42%);
  }
  .item_start {
    justify-content: start;
  }
  #timeline_container {
    position: relative;
    padding: 2em 0;
    padding-bottom: 100px;
    margin-top: 2em;
    margin-bottom: 2em;
  }

  #timeline_container::before {
    content: "";
    position: absolute;
    top: 0;
    left: 50%;
    height: 100%;
    width: 4px;
    background: var(--border);
  }
  .hidden_date {
    margin-bottom: 15px;
    display: none;
  }
  .content_project {
    font-weight: bold;
  }
  .card_custom_content h3{
    margin-bottom: 13px;
  }
  .card_custom_content ul{
    padding: 15px;
  }
  .card_custom_content span{
    color: var(--title_text);
  }
  .back_button {
    position: fixed;
    right: 15px;
    bottom: 15px;
  }
  @media only screen and (max-width: 900px) {
    .timeline_container {
      grid-template-columns: 1fr;
    }
    #timeline_container::before {
      left: 0;
    }
    .item {
      margin-left: 25px;
    }
    .item::before {
      left: 0;
      transform: translateX(-42%);
    }
    .hidden_date {
      margin-bottom: 15px;
      display: block;
    }
    .item_date {
      display: none;
    }
    .back_button {
      position: fixed;
      right: 15px;
      top: 15px;
    }
  }
.stars > * {
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: -1;
    background-size: 200px 200px;
    background-image: radial-gradient(
    3px 3px at 40px 60px,
    #ccc,
    rgba(0, 0, 0, 0)
    ),
    radial-gradient(2px 2px at 20px 50px, #ddd, rgba(0, 0, 0, 0)),
    radial-gradient(2px 2px at 30px 100px, #eee, rgba(0, 0, 0, 0)),
    radial-gradient(2px 2px at 40px 60px, #fff, rgba(0, 0, 0, 0)),
    radial-gradient(2px 2px at 110px 90px, #ccc, rgba(0, 0, 0, 0)),
    radial-gradient(2px 2px at 190px 150px, #ddd, rgba(0, 0, 0, 0)),
    radial-gradient(2px 2px at 90px 123px, #ddd, rgba(0, 0, 0, 0)),
    radial-gradient(2px 2px at 25px 200px, #ddd, rgba(0, 0, 0, 0));
    background-repeat: repeat;
    transform-origin: 50% 50%;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    animation-name: rotateAnimation;
  }

  .stars > *:nth-child(1) {
    animation-duration: 30s;
  }

  .stars > *:nth-child(2) {
    animation-duration: 32s;
  }

  .stars > *:nth-child(3) {
    animation-duration: 35s;
  }

  .stars > *:nth-child(4) {
    animation-duration: 41s;
  }

  .stars > *:nth-child(5) {
    animation-duration: 44s;
  }

  .stars > *:nth-child(6) {
    animation-duration: 49s;
  }

  .stars > *:nth-child(7) {
    animation-duration: 52s;
  }

  .stars > *:nth-child(8) {
    animation-duration: 56s;
  }
  @keyframes rotateAnimation {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
  }
</style>